import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.jetbrains.changelog.Changelog

import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version "${intellijPluginVersion}"
    id 'org.jetbrains.changelog' version '2.0.0'
    id 'me.filippov.gradle.jvm.wrapper' version '0.14.0'
}

repositories {
    maven { setUrl("https://cache-redirector.jetbrains.com/maven-central") }
}

apply plugin: 'org.jetbrains.changelog'

group "jezzsantos"
version "${thisPluginVersion}"

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10'
    // HACK: we need to stay on this older version of AI for as long as possible
    //noinspection GradlePackageUpdate
    implementation 'com.microsoft.azure:applicationinsights-core:2.6.4'
}

test {
    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
        testImplementation 'org.mockito:mockito-core:4.8.0'
        testImplementation 'org.testng:testng:7.6.1'
        testRuntimeOnly 'org.junit.support:testng-engine:1.0.4'
    }

    systemProperty "LOCAL_ENV_RUN", "true" //For use with 'BaseTestWithSolution' and TestNG
    useJUnitPlatform()
    minHeapSize = "512m"
    maxHeapSize = "1024m"
    testLogging {
        showStandardStreams = true
        exceptionFormat = TestExceptionFormat.FULL
    }
}

intellij {
    type = "${platformType}"
    version = "${platformVersion}"
    downloadSources = false
    instrumentCode = true
}

runIde {
    maxHeapSize = "2G"
    autoReloadPlugins = false
}

changelog {
    version = "${thisPluginVersion}"
    path = "${project.projectDir}/CHANGELOG.md"
    header = "[${-> version.get()}] - ${new SimpleDateFormat("yyyy-MM-dd").format(new Date())}"
    headerParserRegex = ~/(\d+\.\d+\.\d+[\-\w]*)/
    introduction = """
        All notable changes to this project are documented in this file.

> The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/), and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
    """.stripIndent()
    itemPrefix = "-"
    keepUnreleasedSection = true
    unreleasedTerm = "[Unreleased]"
    groups = ["Notes", "Added", "Changed", "Deprecated", "Removed", "Fixed", "Security"]
    lineSeparator = "\n"
    combinePreReleases = true
}

wrapper {
    gradleVersion = "${gradleVersion}"
}

patchPluginXml {
    changeNotes.set(changelog.renderItem(
            changelog
                    .getUnreleased()
                    .withHeader(false)
                    .withEmptySections(false),
            Changelog.OutputType.HTML
    ))
    sinceBuild = "${pluginSinceBuild}"
    untilBuild = "${pluginUntilBuild}"
}

publishPlugin {
    token.set(System.getenv("ORG_GRADLE_PROJECT_intellijPublishToken"))
    channels.set(List.of(("${thisPluginVersion}".split("-").length > 1) ? "${thisPluginVersion}".split("-")[1] : "default"))
    var versionExists = changelog.has("${thisPluginVersion}")
    if (versionExists) {
        patchPluginXml.changeNotes.set(changelog.renderItem(
                changelog
                        .get("${thisPluginVersion}")
                        .withHeader(false)
                        .withEmptySections(false),
                Changelog.OutputType.HTML
        ))
    }
}

runPluginVerifier {
    ideVersions.set(List.of("${platformVersionsToVerify}".split(",")))
}